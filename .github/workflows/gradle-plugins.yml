##
 # Reusable standardised Gradle workflow to automate testing, dependency patching,
 # and Gradle plugin publishing.
 #
 # This workflow can be called from workflows in other repos with:
 # ```
 # jobs:
 #   <job-id>:
 #     uses: brightsparklabs/github-actions/.github/workflows/gradle.yml@<version>
 #     secrets: inherit
 #     permissions:
 #       contents: write
 #       pull-requests: write
 # ```
 # See https://docs.github.com/en/actions/using-workflows/reusing-workflows#creating-a-reusable-workflow
 # ______________________________________________________________________________
 #
 # Maintained by brightSPARK Labs.
 # www.brightsparklabs.com
 ##

name: Gradle Workflow
on:
  # This workflow will run when called by another workflow.
  workflow_call:
    inputs:
      os:
        description: A JSON string containing the list of operating systems to run Gradle build on.
        default: '["ubuntu-latest"]'
        required: false
        type: string

jobs:
  # Run tests.
  call-test-gradle-build-workflow:
    # Prevent unnecessary duplicate test runs.
    if: |
      (github.event_name == 'push' && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'pull_request' && github.actor == 'dependabot[bot]')
    strategy:
      matrix:
        os: ${{ fromJson(inputs.os) }}
    uses: ./.github/workflows/test-gradle-build.yml
    with:
      os: ${{ matrix.os }}
  # Auto-merge Dependabot PRs for patch and minor updates.
  call-dependabot-auto-merge-workflow:
    if: ${{ github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' }}
    # Specify that this job should only run if the test job succeeds.
    needs: call-test-gradle-build-workflow
    # These permissions are required for Dependabot to merge the PR.
    permissions:
      contents: write
      pull-requests: write
    uses: ./.github/workflows/dependabot-auto-merge.yml
    # Since all of our workflows are called from the same organisation, we can use the `inherit`
    # keyword to pass secrets to the called workflow.
    secrets: inherit
  # Publish pushes to the `master` branch.
  publish-plugins:
    if: ${{ github.event_name == 'push' && github.ref_name == 'master' }}
    needs: call-test-gradle-build-workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
        # Fetch all commits to ensure `git describe` returns correct version.
          fetch-depth: 0
      - name: Fix tag
        # Workaround actions/checkout bug. See:
        # - https://github.com/actions/checkout/issues/290
        # - https://github.com/actions/checkout/issues/882
        run: git fetch -fvt origin
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "temurin"
          cache: "gradle"
      - name: Publish Plugins
        run: |
          mkdir -p ~/.gradle
          echo "gradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}" >> ~/.gradle/gradle.properties
          echo "gradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}" >> ~/.gradle/gradle.properties
          ./gradlew publishPlugins
